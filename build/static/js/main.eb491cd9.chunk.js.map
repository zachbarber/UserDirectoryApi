{"version":3,"sources":["components/Sidebar/Sidebar.jsx","components/Home/Home.jsx","components/DepartmentsList/DepartmentsList.jsx","components/Department/Department.jsx","components/EmployeesList/EmployeesList.jsx","components/EditEmployee/EmployeeDetail.jsx","components/Employee/Employee.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","sidebarButtonOnClick","bind","state","isExpanded","this","setState","className","onClick","clickEvent","sidebarSelectHandler","target","id","src","process","alt","React","Component","Home","DepartmentsList","Departments","axios","get","data","map","department","departmentSelectHandler","name","Department","departmentId","departmentName","employees","departmentData","employeeData","employeesList","employee","employeeSelectHandler","value","editEmployeeSelectHandler","EmployeesList","EmployeeDetail","match","params","employeeId","isNew","console","log","updatedEmployee","departmentNameIds","inputOnChange","onInputChange","onFormSubmit","changeEvent","type","checked","employeeDeepCopy","JSON","parse","stringify","formSubmitEvent","preventDefault","parseInt","hireDate","Date","toISOString","split","put","employeePutReturned","isEditMode","selectOptions","selected","onSubmit","e","for","onChange","role","phoneNumber","emailAddress","isSupervisor","withRouter","Employee","onEditClick","toLocaleDateString","App","linkSelection","selectedEmployeeId","selectedDepartmentId","selectedLink","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb491cd9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.sidebarButtonOnClick = this.sidebarButtonOnClick.bind(this);\r\n        this.state = {\r\n            isExpanded: true,\r\n        }\r\n    }\r\n\r\n    sidebarButtonOnClick() {\r\n        this.setState({\r\n            isExpanded: !this.state.isExpanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isExpanded } = this.state;\r\n        return (\r\n        <>\r\n                    <div className={isExpanded ? 'sidebarContainerExpanded' : 'sidebarContainerCollapsed'} >\r\n                    <div className={isExpanded ? 'sidebarListContainerExpanded' : 'sidebarListContainerCollapsed'} >\r\n                        <ul className={isExpanded ? 'sidebarListExpanded' : 'sidebarListCollapsed'} >\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='home' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Home</li>\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='departmentsList' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Departments</li>\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='employeesList' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Employees</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className='sidebarButtonContainer'>\r\n                        <img className='sidebarButton' onClick={this.sidebarButtonOnClick} src={isExpanded ? `${process.env.PUBLIC_URL}/leftArrow.png` : `${process.env.PUBLIC_URL}/rightArrow.png`} alt={isExpanded ? 'collapse sidebar arrow' : 'expand sidebar arrow'}/>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className='test'>Home</h1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport './DepartmentsList.css';\r\n\r\nclass DepartmentsList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Departments: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data } = await axios.get(`${process.env.PUBLIC_URL}/api/Departments`);\r\n        this.setState({ Departments: data })\r\n    }\r\n\r\n    render() {\r\n        const { Departments } = this.state;\r\n        const DepartmentsList = Departments.map(department => {\r\n            return <li onClick={(clickEvent) => this.props.departmentSelectHandler(clickEvent.target.id)} id={department.id} className='departmentLink'>{department.name}</li>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {DepartmentsList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default DepartmentsList\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Department.css';\r\n\r\nclass Department extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            departmentId: this.props.id,\r\n            departmentName: null,\r\n            employees: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data: departmentData } = await axios.get(`${process.env.PUBLIC_URL}/api/departments/?id=${this.props.id}`);\r\n        const { data: employeeData } = await axios.get(`${process.env.PUBLIC_URL}/api/departmentEmployeeList/?id=${this.props.id}`);\r\n\r\n        this.setState({\r\n            departmentId: departmentData[0].id,\r\n            departmentName: departmentData[0].name,\r\n            employees: employeeData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { employees } = this.state;\r\n        const employeesList = employees.map(employee => {\r\n            return <li onClick={(clickEvent) => this.props.employeeSelectHandler(clickEvent.target.id)} id={employee.id} className='employeeLink'>{employee.name}</li>\r\n        })\r\n\r\n        return (\r\n            <>\r\n                <div className='headerDiv'>\r\n                    <h1 className='nameHeader'>{this.state.departmentName}</h1>\r\n                    <ul>{employeesList}</ul>\r\n                </div>\r\n                <div className='addEmployeeButtonDiv'>\r\n                    <br />\r\n                    <button className='addEmployeeButton' name='addEmployee' value='Add Employee' id={this.props.id} onClick={(clickEvent) => this.props.editEmployeeSelectHandler(0, clickEvent.target.id)} />\r\n                    <br />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Department;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport './EmployeesList.css';\r\n\r\nclass EmployeesList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employees: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data } = await axios.get(`${process.env.PUBLIC_URL}/api/employees`);\r\n        this.setState({ employees: data })\r\n    }\r\n\r\n    render() {\r\n        const { employees } = this.state;\r\n        const employeesList = employees.map(employee => {\r\n            return <li onClick={(clickEvent) => this.props.employeeSelectHandler(clickEvent.target.id)} id={employee.id} className='employeeLink'>{employee.name}</li>\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <div>\r\n                    <ul>\r\n                        {employeesList}\r\n                    </ul>\r\n                </div>\r\n                <div className='addEmployeeButtonDiv'>\r\n                    <br />\r\n                    <button className='addEmployeeButton' name='addEmployee' value='Add Employee' id={this.props.id} onClick={(clickEvent) => this.props.editEmployeeSelectHandler(clickEvent.target.id, 0)} />\r\n                    <br />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default EmployeesList\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router';\r\nimport './EmployeeDetail.css';\r\n\r\nclass EmployeeDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        const { employeeId, isNew } = this.props.match.params;\r\n\r\n        console.log('>>>>emp')\r\n        console.log(employeeId)\r\n\r\n        console.log('>>>>>isnew')\r\n        console.log(isNew);\r\n\r\n        this.state = {\r\n            employeeId: employeeId,\r\n            departmentId: this.props.departmentId,\r\n            employee: null,\r\n            updatedEmployee: null,\r\n            departmentNameIds: [],\r\n            isNew\r\n        }\r\n\r\n        this.inputOnChange = this.onInputChange.bind(this);\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        let employeeData = {};\r\n        if (this.props.employeeId) {\r\n            const { data } = await axios.get(`${process.env.PUBLIC_URL}/api/employees?id=${this.props.employeeId}`);\r\n            employeeData = data[0];\r\n        } \r\n\r\n        const { data: departmentNameIds } = await axios.get(`${process.env.PUBLIC_URL}/api/departmentNameIds`);\r\n        this.setState({\r\n            employee: employeeData,\r\n            updatedEmployee: employeeData,\r\n            departmentNameIds\r\n        });\r\n    }\r\n\r\n    onInputChange(changeEvent) {\r\n        const target = changeEvent.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy[target.id] = value;\r\n        this.setState({\r\n            updatedEmployee: employeeDeepCopy\r\n        });\r\n    }\r\n\r\n    async onFormSubmit(formSubmitEvent) {\r\n        formSubmitEvent.preventDefault();\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy.departmentId = parseInt(employeeDeepCopy.departmentId)\r\n        employeeDeepCopy.id = parseInt(employeeDeepCopy.id);\r\n        employeeDeepCopy.hireDate = new Date(employeeDeepCopy.hireDate).toISOString().split('T')[0];\r\n\r\n        if (this.props.employeeId) {\r\n            try {\r\n                const { data: employeePutReturned } = await axios.put(`${process.env.PUBLIC_URL}/api/employees?id=${this.state.updatedEmployee.id}`, employeeDeepCopy);\r\n                this.setState({\r\n                    employee: employeePutReturned[0],\r\n                    updatedEmployee: employeePutReturned[0],\r\n                    isEditMode: false\r\n                });\r\n            } catch (err) {\r\n                console.log(err)\r\n            };\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { employeeId, departmentId, employee, updatedEmployee, departmentNameIds } = this.state;\r\n        const selectOptions = departmentNameIds.map(department => {\r\n            return <option value={department.id} selected={department.id === updatedEmployee.departmentId ? 'selected' : ''}>{department?.name}</option>\r\n        })\r\n\r\n        return (\r\n            <form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                { this.props.isNew ? <label> IS NEW TEST </label> : <label>Fail 1</label>}\r\n                { this.props.employeeId ? <label>EMPLOYEE ID TEST {this.props.employeeId}</label>: <label>Fail 2</label>}\r\n                <label for='employeeName'>Name:</label><br />\r\n                <input type='text' id='name' name='employeeName' value={updatedEmployee?.name} onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <label for='employeeRole'>Role:</label><br />\r\n                <input type='text' id='role' name='employeeRole' value={updatedEmployee?.role} onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <label for='phoneNumber'>Phone Number:</label><br />\r\n                <input type='text' id='phoneNumber' name='phoneNumber' value={updatedEmployee?.phoneNumber} onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <label for='emailAddress'>Email Address:</label><br />\r\n                <input type='text' id='emailAddress' name='emailAddress' value={updatedEmployee?.emailAddress} onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <label for='employeeDepartment'>Department:</label><br />\r\n                <select id='departmentId' name='EmployeeDepartment' value={updatedEmployee?.departmentId} onChange={(e) => this.onInputChange(e)} >\r\n                    {selectOptions}\r\n                </select>\r\n\r\n                <input type='checkbox' id='isSupervisor' name='supervisor' checked={updatedEmployee?.isSupervisor} onChange={(e) => this.onInputChange(e)} />\r\n                <label for='isSupervisor'>Supervisor</label><br />\r\n\r\n                <label for='hireDate'>Hire Date:</label><br />\r\n                <input type='date' id='hireDate' name='employeeHireDate' onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <br /><input type='submit' id='editSubmit' name='editSubmit' value='Submit' />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(EmployeeDetail);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport EmployeeDetail from '../EditEmployee/EmployeeDetail'\r\nimport './Employee.css';\r\n\r\nclass Employee extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n        this.onEditClick = this.onEditClick.bind(this);\r\n        this.state = {\r\n            employee: null,\r\n            updatedEmployee: null,\r\n            departmentNameIds: [],\r\n            isEditMode: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data: employeeData } = await axios.get(`${process.env.PUBLIC_URL}/api/employees?id=${this.props.id}`);\r\n        const { data: departmentNameIds } = await axios.get(`${process.env.PUBLIC_URL}/api/departmentNameIds`);\r\n        this.setState({\r\n            employee: employeeData[0],\r\n            updatedEmployee: employeeData[0],\r\n            departmentNameIds\r\n        });\r\n    }\r\n\r\n    onInputChange(changeEvent) {\r\n        const target = changeEvent.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy[target.id] = value;\r\n        this.setState({\r\n            updatedEmployee: employeeDeepCopy\r\n        });\r\n    }\r\n\r\n    async onFormSubmit(formSubmitEvent) {\r\n        formSubmitEvent.preventDefault();\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy.departmentId = parseInt(employeeDeepCopy.departmentId);\r\n        employeeDeepCopy.id = parseInt(employeeDeepCopy.id);\r\n        employeeDeepCopy.hireDate = new Date(employeeDeepCopy.hireDate).toISOString().split('T')[0];\r\n\r\n        try {\r\n            const { data: employeePutReturned } = await axios.put(`${process.env.PUBLIC_URL}/api/employees?id=${this.state.updatedEmployee.id}`, employeeDeepCopy);\r\n            this.setState({\r\n                employee: employeePutReturned[0],\r\n                updatedEmployee: employeePutReturned[0],\r\n                isEditMode: false\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n        };\r\n    }\r\n\r\n    onEditClick() {\r\n        this.setState({ isEditMode: true });\r\n    }\r\n\r\n    render() {\r\n        const { isEditMode, departmentNameIds, updatedEmployee, employee } = this.state;\r\n        const selectOptions = departmentNameIds.map(department => {\r\n            return <option value={department.id} selected={department.id === updatedEmployee.departmentId ? 'selected' : ''}>{department?.name}</option>\r\n        })\r\n\r\n        return (\r\n            <>\r\n                <div className='employeeHeader'>\r\n                    <h1 className='employeeNameHeader'>Employee</h1>\r\n                </div>\r\n                <div className='employeeButtonHeader'>\r\n                    <button className='editEmployeeButton' name='editEmployee' value='Edit Employee' id={employee?.id} onClick={(clickEvent) => this.props.editEmployeeSelectHandler(clickEvent.target.id, employee.departmentId)}>Edit Employee</button>\r\n                </div>\r\n                <div className='employeeBody'>\r\n                    <div className='employeeBodyName'>\r\n                        <h1>Name: </h1>\r\n                        <h1>{employee?.name}</h1><br />\r\n                    </div>\r\n\r\n                    <div className='employeeBodyId'>\r\n                        <h1>Employee Id: </h1>\r\n                        <h1>{employee?.id}</h1><br />\r\n                    </div>\r\n\r\n                    <div className='employeeBodyRole'>\r\n                        <h1>Role: </h1>\r\n                        <h1>{employee?.role}</h1><br />\r\n                    </div>\r\n\r\n                    <div className='employeeBodyPhoneNumber'>\r\n                        <h1>Phone Number: </h1>\r\n                        <h1>{employee?.phoneNumber}</h1><br />\r\n                    </div>\r\n\r\n                    <div className='employeeBodyEmailAddress'>\r\n                        <h1>Email Address: </h1>\r\n                        <h1>{employee?.emailAddress}</h1><br />\r\n                    </div>\r\n\r\n                    <div className='employeeBodyDepartment'>\r\n                        <h1>Department: </h1>\r\n                        <h1>{employee?.departmentName}</h1><br />\r\n                    </div>\r\n\r\n                    <div className='employeeBodyHireDate'>\r\n                        <h1>Hire Date: </h1>\r\n                        <h1>{new Date(employee?.hireDate).toLocaleDateString()}</h1><br />\r\n                    </div>\r\n\r\n                    <div className='employeeBodyIsSupervisor'>\r\n                        <h1>Supervisor?: </h1>\r\n                        <h1>{employee?.isSupervisor ? `YES` : `NO`}</h1><br />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { browserHistory, withRouter } from 'react-router';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Home from './components/Home/Home';\nimport DepartmentsList from './components/DepartmentsList/DepartmentsList';\nimport Department from './components/Department/Department';\nimport EmployeesList from './components/EmployeesList/EmployeesList';\nimport Employee from './components/Employee/Employee';\nimport EmployeeDetail from './components/EditEmployee/EmployeeDetail';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.sidebarSelectHandler = this.sidebarSelectHandler.bind(this);\n    this.employeeSelectHandler = this.employeeSelectHandler.bind(this);\n    this.editEmployeeSelectHandler = this.editEmployeeSelectHandler.bind(this);\n    this.departmentSelectHandler = this.departmentSelectHandler.bind(this);\n    this.state = {\n      linkSelection: 'home',\n      selectedEmployeeId: null,\n      selectedDepartmentId: null,\n    }\n  }\n\n  sidebarSelectHandler(selectedLink) {\n    this.setState({\n      linkSelection: selectedLink\n    });\n  }\n\n  employeeSelectHandler(selectedEmployeeId) {\n    this.setState({\n      linkSelection: 'employee',\n      selectedEmployeeId\n    });\n  }\n\n  editEmployeeSelectHandler(selectedEmployeeId, selectedDepartmentId) {\n    //if employee id, link selection is editEmployee/queryparams\n\n    console.log('HIT 123')\n    console.log(selectedEmployeeId)\n      if (selectedEmployeeId) {\n        this.setState({\n          linkSelection: `employeeDetail/?isNew=${true}`,\n          selectedEmployeeId,\n          selectedDepartmentId\n        });\n      } else {\n        this.setState({\n          linkSelection: `employeeDetail/?employeeId=${selectedEmployeeId}`,\n          selectedEmployeeId,\n          selectedDepartmentId\n        });\n      }\n    \n  }\n\n  //else if departmentId query params with isnew \n\n  //else isnew query params with isnew\n\n  departmentSelectHandler(selectedDepartmentId) {\n    this.setState({\n      linkSelection: 'department',\n      selectedDepartmentId\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n      <div className='app'>\n        <Sidebar sidebarSelectHandler={this.sidebarSelectHandler} />\n        <div className='contentContainer'>\n\n          \n\n            <Route path='/home'>\n              <Home />\n            </Route>\n\n            <Route path='/departmentsList'>\n              <DepartmentsList departmentSelectHandler={this.departmentSelectHandler} />\n            </Route>\n\n            <Route path='/department'>\n              <Department id={this.state.selectedDepartmentId} employeeSelectHandler={this.employeeSelectHandler} editEmployeeSelectHandler={this.editEmployeeSelectHandler} />\n            </Route>\n\n            <Route path='/employeesList'>\n              <EmployeesList employeeSelectHandler={this.employeeSelectHandler} editEmployeeSelectHandler={this.editEmployeeSelectHandler} />\n            </Route>\n\n            <Route path='/employee'>\n              <Employee id={this.state.selectedEmployeeId} editEmployeeSelectHandler={this.editEmployeeSelectHandler} />\n            </Route>\n\n            <Route path='/employeeDetail'>\n              <EmployeeDetail/>\n            </Route>\n\n            <Redirect to={this.state.linkSelection} />\n\n          \n\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}