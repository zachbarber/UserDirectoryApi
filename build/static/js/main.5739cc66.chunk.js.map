{"version":3,"sources":["components/Sidebar/Sidebar.jsx","components/Home/Home.jsx","components/DepartmentsList/DepartmentsList.jsx","components/Department/Department.jsx","components/EmployeesList/EmployeesList.jsx","components/Employee/Employee.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","state","isExpanded","sidebarButtonOnClick","bind","this","setState","className","onClick","clickEvent","sidebarSelectHandler","target","id","src","process","alt","React","Component","Home","DepartmentsList","Departments","axios","get","data","map","department","departmentSelectHandler","name","Department","departmentId","departmentName","supervisorId","employees","employee","employeesList","push","employeeId","employeeName","isSupervisor","console","log","EmployeesList","employeeSelectHandler","Employee","updatedEmployee","departmentNameIds","isEditMode","onFormSubmit","onEditClick","inputOnChange","employeeData","formSubmitEvent","preventDefault","employeeDeepCopy","JSON","parse","stringify","parseInt","hireDate","Date","toISOString","split","put","employeePutReturned","changeEvent","value","type","checked","selectOptions","selected","onSubmit","e","for","onChange","role","phoneNumber","emailAddress","toLocaleDateString","App","linkSelection","selectedEmployeeId","selectedDepartmentId","selectedLink","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5739cc66.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            isExpanded: true,\r\n        }\r\n\r\n        this.sidebarButtonOnClick = this.sidebarButtonOnClick.bind(this);\r\n    }\r\n\r\n    sidebarButtonOnClick() {\r\n\r\n        this.setState({\r\n            isExpanded: !this.state.isExpanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { isExpanded } = this.state;\r\n\r\n        return (\r\n        <>\r\n                    <div className={isExpanded ? 'sidebarContainerExpanded' : 'sidebarContainerCollapsed'} >\r\n                    <div className={isExpanded ? 'sidebarListContainerExpanded' : 'sidebarListContainerCollapsed'} >\r\n                        <ul className={isExpanded ? 'sidebarListExpanded' : 'sidebarListCollapsed'} >\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='home' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Home</li>\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='departments' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Departments</li>\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='employees' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Employees</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className='sidebarButtonContainer'>\r\n                        <img className='sidebarButton' onClick={this.sidebarButtonOnClick} src={isExpanded ? `${process.env.PUBLIC_URL}/leftArrow.png` : `${process.env.PUBLIC_URL}/rightArrow.png`} alt={isExpanded ? 'collapse sidebar arrow' : 'expand sidebar arrow'}/>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <h1 className='test'>Home</h1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './DepartmentsList.css';\r\n\r\nclass DepartmentsList extends React.Component {\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            Departments: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const { data } = await axios.get(`${process.env.PUBLIC_URL}/api/Departments`)\r\n\r\n        this.setState({ Departments: data })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { Departments } = this.state;\r\n\r\n        const DepartmentsList = Departments.map(department => {\r\n\r\n            return <li onClick={(clickEvent) => this.props.departmentSelectHandler(clickEvent.target.id)} id={department.id} className='departmentLink'>{department.name}</li>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {DepartmentsList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default DepartmentsList","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Department.css';\r\n\r\nclass Department extends React.Component {\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            departmentId: this.props.id,\r\n            departmentName: null,\r\n            supervisorId: null,\r\n            employees: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const { data } = await axios.get(`${process.env.PUBLIC_URL}/api/departments/?id=${this.props.id}`);\r\n\r\n        const employeesList = [];\r\n\r\n        for (const employee in data) {\r\n\r\n            employeesList.push({\r\n                employeeId: data[employee].employeeId,\r\n                employeeName: data[employee].employeeName,\r\n                isSupervisor: data[employee].isSupervisor\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            departmentId: data[0].id,\r\n            departmentName: data[0].name,\r\n            supervisorId: data[0].supervisorId,\r\n            employees: employeesList\r\n        });\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='headerDiv'>\r\n                <h1 className='nameHeader'>{this.state.departmentName}</h1>\r\n            </div>\r\n            //add in buttons (edit, add, delete) and space-between? flex\r\n        )\r\n    }\r\n}\r\n\r\nexport default Department;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './EmployeesList.css';\r\n\r\nclass EmployeesList extends React.Component {\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            employees: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const { data } = await axios.get(`${process.env.PUBLIC_URL}/api/employees`)\r\n\r\n        this.setState({ employees: data })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { employees } = this.state;\r\n\r\n        const employeesList = employees.map(employee => {\r\n\r\n            return <li onClick={(clickEvent) => this.props.employeeSelectHandler(clickEvent.target.id)} id={employee.id} className='employeeLink'>{employee.name}</li>\r\n        });\r\n\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {employeesList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default EmployeesList","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Employee.css';\r\n\r\nclass Employee extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            employee: null,\r\n            updatedEmployee: null,\r\n            departmentNameIds: [],\r\n            isEditMode: false\r\n        }\r\n\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n        this.onEditClick = this.onEditClick.bind(this);\r\n        this.inputOnChange = this.inputOnChange.bind(this);\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        const employeeData = await (await axios.get(`${process.env.PUBLIC_URL}/api/employees?id=${this.props.id}`)).data[0];\r\n\r\n        const departmentNameIds = await (await axios.get(`${process.env.PUBLIC_URL}/api/departmentNameIds`)).data;\r\n\r\n        this.setState({\r\n            employee: employeeData,\r\n            updatedEmployee: employeeData,\r\n            departmentNameIds\r\n        });\r\n    }\r\n\r\n\r\n    async onFormSubmit(formSubmitEvent) {\r\n\r\n        formSubmitEvent.preventDefault();\r\n\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        \r\n        employeeDeepCopy.departmentId = parseInt(employeeDeepCopy.departmentId);\r\n        \r\n        employeeDeepCopy.id = parseInt(employeeDeepCopy.id);\r\n        \r\n        employeeDeepCopy.hireDate = new Date(employeeDeepCopy.hireDate).toISOString().split('T')[0];\r\n        \r\n        try {\r\n            \r\n            const employeePutReturned = await (await axios.put(`${process.env.PUBLIC_URL}/api/employees?id=${this.state.updatedEmployee.id}`, employeeDeepCopy)).data[0];\r\n                        \r\n            this.setState({\r\n                employee: employeePutReturned,\r\n                updatedEmployee: employeePutReturned,\r\n                isEditMode: false\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n        };\r\n    }\r\n\r\n\r\n    onEditClick() {\r\n\r\n        this.setState({ isEditMode: true });\r\n    }\r\n\r\n\r\n    inputOnChange(changeEvent) {\r\n\r\n        const target = changeEvent.target;\r\n\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n\r\n        employeeDeepCopy[target.id] = value;\r\n\r\n        this.setState({\r\n            updatedEmployee: employeeDeepCopy\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { isEditMode, departmentNameIds, updatedEmployee, employee } = this.state;\r\n\r\n        const selectOptions = departmentNameIds.map(department => {\r\n\r\n            return <option value={department.id} selected={department.id === updatedEmployee.departmentId ? 'selected' : ''}>{department.name}</option>\r\n        })\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n                {isEditMode ?\r\n                    <>\r\n                        <form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                            <label for='employeeName'>Name:</label><br />\r\n                            <input type='text' id='name' name='employeeName' value={updatedEmployee.name} onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <label for='employeeRole'>Role:</label><br />\r\n                            <input type='text' id='role' name='employeeRole' value={updatedEmployee.role} onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <label for='phoneNumber'>Phone Number:</label><br />\r\n                            <input type='text' id='phoneNumber' name='phoneNumber' value={updatedEmployee.phoneNumber} onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <label for='emailAddress'>Email Address:</label><br />\r\n                            <input type='text' id='emailAddress' name='emailAddress' value={updatedEmployee.emailAddress} onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <label for='employeeDepartment'>Department:</label><br />\r\n                            <select id='departmentId' name='EmployeeDepartment' value={updatedEmployee.departmentId} onChange={(e) => this.inputOnChange(e)} >\r\n                                {selectOptions}\r\n                            </select>\r\n\r\n                            <input type='checkbox' id='isSupervisor' name='supervisor' checked={updatedEmployee.isSupervisor} onChange={(e) => this.inputOnChange(e)} />\r\n                            <label for='isSupervisor'>Supervisor</label><br />\r\n\r\n                            <label for='hireDate'>Hire Date:</label><br />\r\n                            <input type='date' id='hireDate' name='employeeHireDate' onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <br /><input type='submit' id='editSubmit' name='editSubmit' value='Submit' />\r\n                        </form>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <div className='employeeHeader'>\r\n                            <h1 className='employeeNameHeader'>Employee</h1>\r\n                        </div>\r\n                        <div className='employeeButtonHeader'>\r\n                            <button onClick={this.onEditClick}>Edit Employee</button>\r\n                        </div>\r\n                        <div className='employeeBody'>\r\n                            <div className='employeeBodyName'>\r\n                                <h1>Name: </h1>\r\n                                <h1>{employee?.name}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyId'>\r\n                                <h1>Employee Id: </h1>\r\n                                <h1>{employee?.id}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyRole'>\r\n                                <h1>Role: </h1>\r\n                                <h1>{employee?.role}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyPhoneNumber'>\r\n                                <h1>Phone Number: </h1>\r\n                                <h1>{employee?.phoneNumber}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyEmailAddress'>\r\n                                <h1>Email Address: </h1>\r\n                                <h1>{employee?.emailAddress}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyDepartment'>\r\n                                <h1>Department: </h1>\r\n                                <h1>{employee?.departmentName}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyHireDate'>\r\n                                <h1>Hire Date: </h1>\r\n                                <h1>{new Date(employee?.hireDate).toLocaleDateString()}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyIsSupervisor'>\r\n                                <h1>Supervisor?: </h1>\r\n                                <h1>{employee?.isSupervisor ? `YES` : `NO`}</h1><br />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { browserHistory } from 'react-router';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Home from './components/Home/Home';\nimport DepartmentsList from './components/DepartmentsList/DepartmentsList';\nimport Department from './components/Department/Department';\nimport EmployeesList from './components/EmployeesList/EmployeesList';\nimport Employee from './components/Employee/Employee';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n\n    super();\n\n    this.sidebarSelectHandler = this.sidebarSelectHandler.bind(this);\n\n    this.employeeSelectHandler = this.employeeSelectHandler.bind(this);\n\n    this.departmentSelectHandler = this.departmentSelectHandler.bind(this);\n\n    this.state = {\n      linkSelection: 'home',\n      selectedEmployeeId: null,\n      selectedDepartmentId: null,\n    }\n  }\n\n  sidebarSelectHandler(selectedLink) {\n    this.setState({\n      linkSelection: selectedLink\n    });\n  }\n\n  employeeSelectHandler(selectedEmployeeId) {\n    this.setState({\n      linkSelection: 'employee',\n      selectedEmployeeId\n    });\n  }\n\n  departmentSelectHandler(selectedDepartmentId) {\n    this.setState({\n      linkSelection: 'department',\n      selectedDepartmentId\n    });\n  }\n\n  render() {\n\n    return (\n      <div className='app'>\n        <Sidebar sidebarSelectHandler={this.sidebarSelectHandler} />\n        <div className='contentContainer'>\n\n          <Router>\n\n            <Route path='/home'>\n              <Home />\n            </Route>\n\n            <Route path ='/departments'>\n              <DepartmentsList departmentSelectHandler={this.departmentSelectHandler} />\n            </Route>\n\n            <Route path='/department'>\n              <Department id={this.state.selectedDepartmentId} />\n            </Route>\n\n            <Route path='/employees'>\n              <EmployeesList employeeSelectHandler={this.employeeSelectHandler} />\n            </Route>\n\n            <Route path='/employee'>\n              <Employee id={this.state.selectedEmployeeId} />\n            </Route>\n\n\n            <Redirect to={this.state.linkSelection} />\n\n          </Router>\n\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}