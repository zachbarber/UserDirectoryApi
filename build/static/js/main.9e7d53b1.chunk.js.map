{"version":3,"sources":["components/Sidebar/Sidebar.jsx","components/Home/Home.jsx","components/DepartmentsList/DepartmentsList.jsx","components/Department/Department.jsx","components/EmployeesList/EmployeesList.jsx","components/Employee/Employee.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","sidebarButtonOnClick","bind","state","isExpanded","this","setState","className","onClick","clickEvent","sidebarSelectHandler","target","id","src","process","alt","React","Component","Home","DepartmentsList","Departments","axios","get","data","map","department","departmentSelectHandler","name","Department","departmentId","departmentName","supervisorId","employees","departmentData","employeeData","console","log","employeesList","employee","employeeSelectHandler","EmployeesList","Employee","onFormSubmit","onEditClick","inputOnChange","updatedEmployee","departmentNameIds","isEditMode","formSubmitEvent","preventDefault","employeeDeepCopy","JSON","parse","stringify","parseInt","hireDate","Date","toISOString","split","put","employeePutReturned","changeEvent","value","type","checked","selectOptions","selected","onSubmit","e","for","onChange","role","phoneNumber","emailAddress","isSupervisor","toLocaleDateString","App","linkSelection","selectedEmployeeId","selectedDepartmentId","selectedLink","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e7d53b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.sidebarButtonOnClick = this.sidebarButtonOnClick.bind(this);\r\n        this.state = {\r\n            isExpanded: true,\r\n        }\r\n    }\r\n\r\n    sidebarButtonOnClick() {\r\n        this.setState({\r\n            isExpanded: !this.state.isExpanded\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isExpanded } = this.state;\r\n        return (\r\n        <>\r\n                    <div className={isExpanded ? 'sidebarContainerExpanded' : 'sidebarContainerCollapsed'} >\r\n                    <div className={isExpanded ? 'sidebarListContainerExpanded' : 'sidebarListContainerCollapsed'} >\r\n                        <ul className={isExpanded ? 'sidebarListExpanded' : 'sidebarListCollapsed'} >\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='home' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Home</li>\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='departments' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Departments</li>\r\n                            <li onClick={(clickEvent) => this.props.sidebarSelectHandler(clickEvent.target.id)} id='employees' className={isExpanded ? 'sidebarListItemExpanded' : 'sidebarListItemCollapsed'}>Employees</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className='sidebarButtonContainer'>\r\n                        <img className='sidebarButton' onClick={this.sidebarButtonOnClick} src={isExpanded ? `${process.env.PUBLIC_URL}/leftArrow.png` : `${process.env.PUBLIC_URL}/rightArrow.png`} alt={isExpanded ? 'collapse sidebar arrow' : 'expand sidebar arrow'}/>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className='test'>Home</h1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './DepartmentsList.css';\r\n\r\nclass DepartmentsList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Departments: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data } = await axios.get(`${process.env.PUBLIC_URL}/api/Departments`);\r\n        this.setState({ Departments: data })\r\n    }\r\n\r\n    render() {\r\n        const { Departments } = this.state;\r\n        const DepartmentsList = Departments.map(department => {\r\n            return <li onClick={(clickEvent) => this.props.departmentSelectHandler(clickEvent.target.id)} id={department.id} className='departmentLink'>{department.name}</li>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {DepartmentsList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default DepartmentsList","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Department.css';\r\n\r\nclass Department extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            departmentId: this.props.id,\r\n            departmentName: null,\r\n            supervisorId: null,\r\n            employees: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data: departmentData } = await axios.get(`${process.env.PUBLIC_URL}/api/departments/?id=${this.props.id}`);\r\n        const { data: employeeData } = await axios.get(`${process.env.PUBLIC_URL}/api/departmentEmployeeList/?id=${this.props.id}`);\r\n\r\n        this.setState({\r\n            departmentId: departmentData[0].id,\r\n            departmentName: departmentData[0].name,\r\n            supervisorId: departmentData[0].supervisorId,\r\n            employees: employeeData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { employees } = this.state;\r\n        console.log(employees);\r\n        const employeesList = employees.map(employee => {\r\n            return <li onClick={(clickEvent) => this.props.employeeSelectHandler(clickEvent.target.id)} id={employee.id} className='employeeLink'>{employee.name}</li>\r\n        })\r\n\r\n        return (\r\n            <div className='headerDiv'>\r\n                <h1 className='nameHeader'>{this.state.departmentName}</h1>\r\n                <ul>{employeesList}</ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Department;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './EmployeesList.css';\r\n\r\nclass EmployeesList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employees: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data } = await axios.get(`${process.env.PUBLIC_URL}/api/employees`);\r\n        this.setState({ employees: data })\r\n    }\r\n\r\n    render() {\r\n        const { employees } = this.state;\r\n        const employeesList = employees.map(employee => {\r\n            return <li onClick={(clickEvent) => this.props.employeeSelectHandler(clickEvent.target.id)} id={employee.id} className='employeeLink'>{employee.name}</li>\r\n        });\r\n\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {employeesList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default EmployeesList","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Employee.css';\r\n\r\nclass Employee extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n        this.onEditClick = this.onEditClick.bind(this);\r\n        this.inputOnChange = this.inputOnChange.bind(this);\r\n        this.state = {\r\n            employee: null,\r\n            updatedEmployee: null,\r\n            departmentNameIds: [],\r\n            isEditMode: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data: employeeData } = await axios.get(`${process.env.PUBLIC_URL}/api/employees?id=${this.props.id}`);\r\n        const { data: departmentNameIds } = await axios.get(`${process.env.PUBLIC_URL}/api/departmentNameIds`);\r\n        this.setState({\r\n            employee: employeeData[0],\r\n            updatedEmployee: employeeData[0],\r\n            departmentNameIds\r\n        });\r\n    }\r\n\r\n    async onFormSubmit(formSubmitEvent) {\r\n        formSubmitEvent.preventDefault();\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy.departmentId = parseInt(employeeDeepCopy.departmentId);      \r\n        employeeDeepCopy.id = parseInt(employeeDeepCopy.id);\r\n        employeeDeepCopy.hireDate = new Date(employeeDeepCopy.hireDate).toISOString().split('T')[0];\r\n        \r\n        try {\r\n            const { data: employeePutReturned } = await axios.put(`${process.env.PUBLIC_URL}/api/employees?id=${this.state.updatedEmployee.id}`, employeeDeepCopy);           \r\n            this.setState({\r\n                employee: employeePutReturned[0],\r\n                updatedEmployee: employeePutReturned[0],\r\n                isEditMode: false\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n        };\r\n    }\r\n\r\n    onEditClick() {\r\n        this.setState({ isEditMode: true });\r\n    }\r\n\r\n    inputOnChange(changeEvent) {\r\n        const target = changeEvent.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy[target.id] = value;\r\n        this.setState({\r\n            updatedEmployee: employeeDeepCopy\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isEditMode, departmentNameIds, updatedEmployee, employee } = this.state;\r\n        const selectOptions = departmentNameIds.map(department => {\r\n            return <option value={department.id} selected={department.id === updatedEmployee.departmentId ? 'selected' : ''}>{department.name}</option>\r\n        })\r\n\r\n        return (\r\n            <>\r\n                {isEditMode ?\r\n                    <>\r\n                        <form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                            <label for='employeeName'>Name:</label><br />\r\n                            <input type='text' id='name' name='employeeName' value={updatedEmployee.name} onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <label for='employeeRole'>Role:</label><br />\r\n                            <input type='text' id='role' name='employeeRole' value={updatedEmployee.role} onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <label for='phoneNumber'>Phone Number:</label><br />\r\n                            <input type='text' id='phoneNumber' name='phoneNumber' value={updatedEmployee.phoneNumber} onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <label for='emailAddress'>Email Address:</label><br />\r\n                            <input type='text' id='emailAddress' name='emailAddress' value={updatedEmployee.emailAddress} onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <label for='employeeDepartment'>Department:</label><br />\r\n                            <select id='departmentId' name='EmployeeDepartment' value={updatedEmployee.departmentId} onChange={(e) => this.inputOnChange(e)} >\r\n                                {selectOptions}\r\n                            </select>\r\n\r\n                            <input type='checkbox' id='isSupervisor' name='supervisor' checked={updatedEmployee.isSupervisor} onChange={(e) => this.inputOnChange(e)} />\r\n                            <label for='isSupervisor'>Supervisor</label><br />\r\n\r\n                            <label for='hireDate'>Hire Date:</label><br />\r\n                            <input type='date' id='hireDate' name='employeeHireDate' onChange={(e) => this.inputOnChange(e)} /><br />\r\n\r\n                            <br /><input type='submit' id='editSubmit' name='editSubmit' value='Submit' />\r\n                        </form>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <div className='employeeHeader'>\r\n                            <h1 className='employeeNameHeader'>Employee</h1>\r\n                        </div>\r\n                        <div className='employeeButtonHeader'>\r\n                            <button onClick={this.onEditClick}>Edit Employee</button>\r\n                        </div>\r\n                        <div className='employeeBody'>\r\n                            <div className='employeeBodyName'>\r\n                                <h1>Name: </h1>\r\n                                <h1>{employee?.name}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyId'>\r\n                                <h1>Employee Id: </h1>\r\n                                <h1>{employee?.id}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyRole'>\r\n                                <h1>Role: </h1>\r\n                                <h1>{employee?.role}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyPhoneNumber'>\r\n                                <h1>Phone Number: </h1>\r\n                                <h1>{employee?.phoneNumber}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyEmailAddress'>\r\n                                <h1>Email Address: </h1>\r\n                                <h1>{employee?.emailAddress}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyDepartment'>\r\n                                <h1>Department: </h1>\r\n                                <h1>{employee?.departmentName}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyHireDate'>\r\n                                <h1>Hire Date: </h1>\r\n                                <h1>{new Date(employee?.hireDate).toLocaleDateString()}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyIsSupervisor'>\r\n                                <h1>Supervisor?: </h1>\r\n                                <h1>{employee?.isSupervisor ? `YES` : `NO`}</h1><br />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { browserHistory } from 'react-router';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Home from './components/Home/Home';\nimport DepartmentsList from './components/DepartmentsList/DepartmentsList';\nimport Department from './components/Department/Department';\nimport EmployeesList from './components/EmployeesList/EmployeesList';\nimport Employee from './components/Employee/Employee';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.sidebarSelectHandler = this.sidebarSelectHandler.bind(this);\n    this.employeeSelectHandler = this.employeeSelectHandler.bind(this);\n    this.departmentSelectHandler = this.departmentSelectHandler.bind(this);\n    this.state = {\n      linkSelection: 'home',\n      selectedEmployeeId: null,\n      selectedDepartmentId: null,\n    }\n  }\n\n  sidebarSelectHandler(selectedLink) {\n    this.setState({\n      linkSelection: selectedLink\n    });\n  }\n\n  employeeSelectHandler(selectedEmployeeId) {\n    this.setState({\n      linkSelection: 'employee',\n      selectedEmployeeId\n    });\n  }\n\n  departmentSelectHandler(selectedDepartmentId) {\n    this.setState({\n      linkSelection: 'department',\n      selectedDepartmentId\n    });\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Sidebar sidebarSelectHandler={this.sidebarSelectHandler} />\n        <div className='contentContainer'>\n\n          <Router>\n\n            <Route path='/home'>\n              <Home />\n            </Route>\n\n            <Route path ='/departments'>\n              <DepartmentsList departmentSelectHandler={this.departmentSelectHandler} />\n            </Route>\n\n            <Route path='/department'>\n              <Department id={this.state.selectedDepartmentId} employeeSelectHandler={this.employeeSelectHandler}/>\n            </Route>\n\n            <Route path='/employees'>\n              <EmployeesList employeeSelectHandler={this.employeeSelectHandler} />\n            </Route>\n\n            <Route path='/employee'>\n              <Employee id={this.state.selectedEmployeeId} />\n            </Route>\n\n\n            <Redirect to={this.state.linkSelection} />\n\n          </Router>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}